typedef int myInt;

namespace Math {	
	interface MyInterface {
		    int myMethod();
	}
	template<T>
	struct Point implements MyInterface {
		constructor(int a, int b) {
			this->x = a;
			this->b = b;
		}
		destructor {
			
		}
		int x; 
		int b;
		int myMethod(int a, int b);	
	hidden:
		uint64 y;
	};
	int Point::myMethod(int a, int b) {
		return 10;
	} 
}

int main() {
	Math::Point myObject = Math::Point(10);
	Math::Poinr myObject;
	int a = b << 2;
	int c = d >> 2;
	int e = f ^ g;
	int h = i & j;
	int k = l | m;
	myObject.myMethod(10, 20);
	if (true && false && (true || false)) {

	}
}
